//BG settings
@mixin bg--auto($color, $image, $size, $repeat, $mode: overlay){
    background-color: $color;
    background-image: $image;
    background-size: $size;
    background-repeat: $repeat;
    background-blend-mode: $mode;
}
//Margin-left & margin-right
@mixin push--auto {
  margin: {
   left: auto;
   right: auto;
  }
}
//Pseudo elemets position
@mixin pseudo($display: block, $pos: absolute, $content: ''){
  content: $content;
  display: $display;
  position: $pos;
}
//Button
@mixin rounded--button($color: inherit, $radius: 0, $position: relative, $bg-color: inherit, $padding : 0){
    color: $color;
    border-radius: $radius;
    position: $position;
    background-color: $bg-color;
    padding: $padding;
}
//BG size
@mixin responsive-ratio($x,$y, $pseudo: false) {
  $padding: unquote( ( $y / $x ) * 100 + '%' );
  @if $pseudo {
   &:before {
    @include pseudo($pos: relative);
    width: 100%;
    padding-top: $padding;
   }
  } @else {
   padding-top: $padding;
  }
}
//Triangle
@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: 3px;
  }
  @if $direction == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round( $size / 2.5 );
  } @else if $direction == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round( $size / 2.5 );
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    margin-right: -$size;
  } @else if  $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}
//Fonts
@mixin font-source-sans($size: false, $colour: false, $weight: false,  $lh: false, $family: false) {
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
  @if $family{ font-family: $family; }
  @if $size { font-size: $size; }
  @if $colour { color: $colour; }
  @if $weight { font-weight: $weight; }
  @if $lh { line-height: $lh; }
}
//Placeholders
@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}
//Z-index
@function z($name) {
  @if index($z-indexes, $name) {
   @return (length($z-indexes) - index($z-indexes, $name)) + 1;
  } @else {
   @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
   @return null;
  }
}
$z-indexes: (
    //Your classes, for example
  "outdated-browser",
);
//Animate speed
@mixin hardware($backface: true, $perspective: 1000) {
  @if $backface {
   backface-visibility: hidden;
  }
  perspective: $perspective;
}
//Split element
@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
//Media
$breakpoints: (
    //Your points, for example
  "phone":        400px,
);
@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
   $width: map_get($breakpoints, $width);
   @if $type == max {
    $width: $width - 1px;
   }
   @media only screen and (#{$type}-width: $width) {
    @content;
   }
  }
}